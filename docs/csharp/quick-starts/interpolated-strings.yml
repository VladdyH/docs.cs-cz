### YamlMime:Tutorial
title: "<span data-ttu-id=\"d7e63-101\">Interpolované řetězce v jazyce C#</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-101\">Interpolated strings in C#</span></span>"
metadata:
  title: "Interpolované řetězce Interaktivní kurz – elementy QuickStart C#"
  description: "V tomto kurzu budete používat prohlížeč interaktivně používat funkci interpolované řetězce C#. Psaní kódu jazyka C# a zobrazit výsledky kompilace a spuštění kódu přímo v prohlížeči."
  audience: Developer
  ms.custom: mvc
  ms.topic: get-started-article
  level: Beginner
  displayType: two-column
  interactive: csharp
  nextTutorialHref: list-collection
  nextTutorialTitle: <span data-ttu-id="d7e63-105">Kolekce v jazyce C#</span><span class="sxs-lookup"><span data-stu-id="d7e63-105">Collections in C#</span></span>
  ms.openlocfilehash: 56c7cf5f6ce0c5db27ba43eeaffd9eb2e08f8c8a
  ms.sourcegitcommit: d2da0142247ef42a219a5d2907f153e62dc6ea0d
  ms.translationtype: MT
  ms.contentlocale: cs-CZ
  ms.lasthandoff: 02/01/2018
items:
- durationInMinutes: 2
  content: "<span data-ttu-id=\"d7e63-106\">Tento rychlý start se naučíte, jak používat interpolované řetězce v jazyce C# k vložení hodnoty do jednoho výstup řetězec interaktivně.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-106\">This quickstart teaches you how to use interpolated strings in C# to insert values into a single ouput string interactively.</span></span> <span data-ttu-id=\"d7e63-107\">Pomocí prohlížeče psaní kódu jazyka C# a okamžitě uvidíte výsledky kompilace a kód spuštěný.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-107\">You use your browser to write C# code and can immediately see the results of compiling and running your code.</span></span> <span data-ttu-id=\"d7e63-108\">Rychlý Start obsahuje řadu lekce, které zřetězení řetězců, vložení hodnoty do řetězce a formátování tyto hodnoty různými způsoby.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-108\">The quickstart contains a series of lessons that concatenate strings, insert values into strings, and format those values in different ways.</span></span>\n"
- title: "<span data-ttu-id=\"d7e63-109\">Vytvoření interpolované řetězce</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-109\">Create an interpolated string</span></span>"
  durationInMinutes: 2
  content: "<span data-ttu-id=\"d7e63-110\">Spusťte následující kód v okně interaktivní.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-110\">Run the following code in the interactive window.</span></span> <span data-ttu-id=\"d7e63-111\">K tomu, zadejte následující blok kódu v okně interaktivní (nahradit \"\\<název >\" s název) a klikněte na tlačítko **spustit** tlačítko:</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-111\">To do that, type the following code block in the interactive window (replace \"\\<name>\" with your name) and click the **Run** button:</span></span>\n\n```csharp\nvar name = \"<name>\";\nConsole.WriteLine($\"Hello, {name}. It's a pleasure to meet you!\");\n```\n\n<span data-ttu-id=\"d7e63-112\">Když spustíte program, zobrazí jeden řetězec, který obsahuje název vaší v pozdrav.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-112\">When you run the program, it displays a single string that includes your name in the greeting.</span></span> <span data-ttu-id=\"d7e63-113\">Řetězec, které jsou součástí <xref:System.Console.WriteLine%2A> volání metody, které je *interpolované řetězce*.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-113\">The string included in the <xref:System.Console.WriteLine%2A> method call is an *interpolated string*.</span></span> <span data-ttu-id=\"d7e63-114\">Je typ šablony, která umožňuje vytvořit jeden řetězec (volat *způsobit řetězec*) z řetězce, který obsahuje integrovaný kód.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-114\">It's a kind of template that lets you construct a single string (called the *result string*) from a string that includes embedded code.</span></span> <span data-ttu-id=\"d7e63-115\">Interpolované řetězce jsou obzvláště užitečná pro vložení hodnoty do řetězec nebo řetězce zřetězení (spojení).</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-115\">Interpolated strings are particularly useful for inserting values into a string or concatenating (joining together) strings.</span></span> \n\n<span data-ttu-id=\"d7e63-116\">Tento jednoduchý příklad obsahuje dva elementy, které musí mít každý interpolované řetězce:</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-116\">This simple example contains the two elements that every interpolated string must have:</span></span> \n\n- <span data-ttu-id=\"d7e63-117\">Řetězcový literál, který začíná `$` znak před jeho otevření nabídky označit znak.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-117\">A string literal that begins with the `$` character before its opening quotation mark character.</span></span> <span data-ttu-id=\"d7e63-118\">Nesmí být žádné mezery mezi `$` symbolů a znak uvozovky.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-118\">There can't be any spaces between the `$` symbol and the quotation mark character.</span></span> <span data-ttu-id=\"d7e63-119\">(Pokud byste chtěli vidět co se stane, když obsahují jeden, mezeru po vložení `$` znak v okně interaktivní a klikněte na tlačítko **spustit** tlačítko.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-119\">(If you'd like to see what happens if you include one, insert a space after the `$` character in the interactive window and click the **Run** button.</span></span> <span data-ttu-id=\"d7e63-120\">Kompilátor jazyka C# complains, \"Neočekávaný znak\"$\"\".)</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-120\">The C# compiler complains, \"Unexpected character '$'\".)</span></span> \n\n- <span data-ttu-id=\"d7e63-121\">Jeden nebo více *interpolované výrazy*.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-121\">One or more *interpolated expressions*.</span></span> <span data-ttu-id=\"d7e63-122\">Interpolované výrazu je indikován otevírací a uzavírací závorku (`{` a `}`).</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-122\">An interpolated expression is indicated by an opening and closing brace (`{` and `}`).</span></span> <span data-ttu-id=\"d7e63-123\">Můžete vložit jakékoli C# výraz, který vrací hodnotu (včetně `null`) uvnitř složené závorky.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-123\">You can put any C# expression that returns a value (including `null`) inside the braces.</span></span> \n\n<span data-ttu-id=\"d7e63-124\">Nyní si vyzkoušíte několik příkladů více interpolované řetězce s jiné datové typy.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-124\">Let's try a few more interpolated string examples with some other data types.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"d7e63-125\">Toto online kódování prostředí je v režimu preview.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-125\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"d7e63-126\">Pokud narazíte na potíže, nahlaste je [v úložišti dotnet nebo zkuste](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-126\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"d7e63-127\">Zahrnout různé datové typy</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-127\">Include different data types</span></span>"
  durationInMinutes: 3
  content: "<span data-ttu-id=\"d7e63-128\">V předchozích rychlé spuštění použít interpolované řetězce k vložení jednoho řetězce v rámci jiného.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-128\">In the previous quickstart, you used an interpolated string to insert one string inside of another.</span></span> <span data-ttu-id=\"d7e63-129\">Výraz interpolované řetězce mohou být jakéhokoli typu dat, ale.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-129\">An interpolated string expression can be any data type, though.</span></span> <span data-ttu-id=\"d7e63-130\">Nyní si vyzkoušíte interpolované řetězec, který obsahuje hodnoty více datových typů.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-130\">Let's try an interpolated string that has values of multiple data types.</span></span> \n\n<span data-ttu-id=\"d7e63-131\">Následující příklad obsahuje interpolované výrazy s `Vegetable` objektu, členem `Unit` výčtu <xref:System.DateTime> hodnotu a <xref:System.Decimal> hodnotu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-131\">The following example includes interpolated expressions with a `Vegetable` object, a member of the `Unit` enumeration, a <xref:System.DateTime> value, and a <xref:System.Decimal> value.</span></span> <span data-ttu-id=\"d7e63-132\">V okně interaktivní, spusťte ji.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-132\">Run it in the interactive window.</span></span>\n\n```csharp\npublic class Vegetable\n{\n   public Vegetable(string name) => Name = name;\n\n   public string Name { get; }\n\n   public override string ToString() => Name;\n}\n\npublic class Example\n{\n   public enum Unit { item, pound, ounce, dozen };\n\n   public static void Main()\n   {\n      var item = new Vegetable(\"eggplant\");\n      var date = DateTime.Now;\n      var price = 1.99m;\n      var unit = Unit.item;\n      Console.WriteLine($\"On {date}, the price of {item} was {price} per {unit}.\");\n   }\n}\n```\n\n<span data-ttu-id=\"d7e63-133\">Všimněte si, že obsahuje jeden z výrazů interpolované `item` objektu ve výsledném řetězci, který se zobrazí konzole a v takovém případě je řetězec \"Lilek\" vložena do řetězce výsledek.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-133\">Note that one of the interpolated expressions includes the `item` object in the result string that's displayed to the console, and in this case the string \"eggplant\" is inserted into the result string.</span></span> <span data-ttu-id=\"d7e63-134\">Důvodem je, že pokud není typ výrazu interpolované řetězce, kompilátor jazyka C# provede následující akce:</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-134\">That's because, when the type of an interpolated expression is not a string, the C# compiler does the following:</span></span>\n\n- <span data-ttu-id=\"d7e63-135\">Pokud je interpolované výraz `null`, interpolované výraz vrátí prázdný řetězec (\"\", nebo <xref:System.String.Empty?displayProperty=nameWithType>).</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-135\">If the interpolated expression is `null`, the interpolated expression returns an empty string (\"\", or <xref:System.String.Empty?displayProperty=nameWithType>).</span></span>\n\n- <span data-ttu-id=\"d7e63-136\">Pokud není interpolované výraz `null`, `ToString` je volána metoda typu interpolované výrazu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-136\">If the interpolated expression is not `null`, the `ToString` method of the type of the interpolated expression is called.</span></span> <span data-ttu-id=\"d7e63-137\">Toto můžete otestovat pomocí komentářů se definice `Vegetable.ToString` metoda v příkladu umístěním symbol komentáře (`//`) úrovních před ním.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-137\">You can test this by commenting out the definition of the `Vegetable.ToString` method in the example by putting a comment symbol (`//`) in front of it.</span></span> <span data-ttu-id=\"d7e63-138\">Ve výstupu řetězec \"Lilek\" nahrazuje plně kvalifikovaného názvu (obor názvů definované REPL C# spolu se název typu), což je výchozí chování z <xref:System.Object.ToString?displayProperty=nameWithType> metoda.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-138\">In the output, the string \"eggplant\" is replaced by the fully qualified type name (the namespace defined by the C# REPL along with the type name), which is the default behavior of the <xref:System.Object.ToString?displayProperty=nameWithType> method.</span></span>   \n\n<span data-ttu-id=\"d7e63-139\">Ve výstupu z tohoto příkladu datum je příliš přesné (cenu lilek nebude měnit druhou) a hodnotu ceny neznamená jednotku měny.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-139\">In the output from this example, the date is too precise (the price of eggplant does not vary by the second), and the price value doesn't indicate a unit of currency.</span></span> <span data-ttu-id=\"d7e63-140\">V dalším kroku dozvíte, jak tyto problémy vyřešit kontrolou formát řetězce vrácené interpolované výrazy.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-140\">In the next step, you'll learn how to fix those issues by controlling the format of strings returned by interpolated expressions.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"d7e63-141\">Toto online kódování prostředí je v režimu preview.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-141\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"d7e63-142\">Pokud narazíte na potíže, nahlaste je [v úložišti dotnet nebo zkuste](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-142\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"d7e63-143\">Ovládací prvek formátování interpolované výrazy</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-143\">Control the formatting of interpolated expressions</span></span>"
  durationInMinutes: 5
  content: "<span data-ttu-id=\"d7e63-144\">V předchozí lekci dva řetězce chybně formátovaný byly vloženy do tabulky výsledný řetězec.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-144\">In the previous lesson, two poorly formatted strings were inserted into the result string.</span></span> <span data-ttu-id=\"d7e63-145\">Jeden se hodnoty data a času, pro kterou se příslušná pouze datum.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-145\">One was a date and time value for which only the date was appropriate.</span></span> <span data-ttu-id=\"d7e63-146\">Druhý byl ceníku, který neobsahoval pokyn jeho jednotku měny.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-146\">The second was a price that did not indicate its unit of currency.</span></span> <span data-ttu-id=\"d7e63-147\">Obě tyto chyby lze snadno adresu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-147\">Both issues are easy to address.</span></span> <span data-ttu-id=\"d7e63-148\">Interpolované výrazy může zahrnovat *řetězce formátu* které řídí formátování konkrétní typy.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-148\">Interpolated expressions can include *format strings* that control the formatting of particular types.</span></span> <span data-ttu-id=\"d7e63-149\">Upravit volání `Console.WriteLine` z předchozího příkladu zahrnout specifikace formátu pro pole data a ceny, jak je znázorněno na následujícím řádku:</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-149\">Modify the call to `Console.WriteLine` from the previous example to include the format specifier for the date and price fields as shown in the following line:</span></span>\n\n```csharp\nConsole.WriteLine($\"On {date:d}, the price of {item} was {price:C2} per {unit}.\");\n```\n\n<span data-ttu-id=\"d7e63-150\">Pomocí následujících interpolované výraz s dvojtečkou a řetězec formátu zadáte řetězec formátu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-150\">You specify a format string by following the interpolated expression with a colon and the format string.</span></span> <span data-ttu-id=\"d7e63-151\">\"d\" je [řetězec formátu standardní hodnoty data a času](../../standard/base-types/standard-date-and-time-format-strings.md#the-short-date-d-format-specifier) představující formát krátkého data.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-151\">\"d\" is a [standard date and time format string](../../standard/base-types/standard-date-and-time-format-strings.md#the-short-date-d-format-specifier) that represents the short date format.</span></span> <span data-ttu-id=\"d7e63-152\">Je \"C2\" [standardního řetězce formátu čísel](../../standard/base-types/standard-numeric-format-strings.md#the-currency-c-format-specifier) představující číslo jako hodnotu měny s dvě číslice za desetinnou čárkou.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-152\">\"C2\" is a  [standard numeric format string](../../standard/base-types/standard-numeric-format-strings.md#the-currency-c-format-specifier) that represents a number as a currency value with two digits after the decimal point.</span></span>\n\n<span data-ttu-id=\"d7e63-153\">Počet typů v rozhraní .NET standardní knihovny podporují předdefinovanou sadu řetězce formátu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-153\">A number of types in the .NET Standard libraries support a predefined set of format strings.</span></span> <span data-ttu-id=\"d7e63-154\">Mezi ně patří všechny číselnými typy a typy data a času.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-154\">These include all the numeric types and the date and time types.</span></span> <span data-ttu-id=\"d7e63-155\">Úplný seznam typů, které podporují řetězce formátu najdete v tématu [řetězce formátu a typy knihovna tříd rozhraní .NET](../../standard/base-types/formatting-types.md#stringRef) v [typy formátování v .NET](../../standard/base-types/formatting-types.md) článku.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-155\">For a complete list of types that support format strings, see [Format Strings and .NET Class Library Types](../../standard/base-types/formatting-types.md#stringRef) in the [Formatting Types in .NET](../../standard/base-types/formatting-types.md) article.</span></span> <span data-ttu-id=\"d7e63-156\">Žádný typ, může podporovat sadu řetězce formátu, a také lze vytvářet vlastní rozšíření formátování, které poskytují vlastní formátování pro existující typy.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-156\">Any type can support a set of format strings, and you can also develop custom formatting extensions that provide custom formatting for existing types.</span></span> <span data-ttu-id=\"d7e63-157\">Informace o vlastní formátování tím, že poskytuje <xref:System.ICustomFormatter> implementaci, najdete v části [vlastní formátování pomocí ICustomFormatter](../../standard/base-types/formatting-types.md#custom-formatting-with-icustomformatter) v [typy formátování v .NET](../../standard/base-types/formatting-types.md) článku.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-157\">For information on custom formatting by providing an <xref:System.ICustomFormatter> implementation, see [Custom Formatting with ICustomFormatter](../../standard/base-types/formatting-types.md#custom-formatting-with-icustomformatter) in the [Formatting Types in .NET](../../standard/base-types/formatting-types.md) article.</span></span>\n\n<span data-ttu-id=\"d7e63-158\">Zkuste upravit na formát řetězce v **.NET Editor** zobrazíte jejich vlivu formátování data a času a číselná hodnota.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-158\">Try modifying the the format strings in the **.NET Editor** to see how they affect the formatting of the date and time and the numeric value.</span></span> <span data-ttu-id=\"d7e63-159\">Změňte \"d\" v `{date:d}` k \"t\" (zobrazíte na formát krátkého času), \"y\" (zobrazíte za rok a měsíc) a \"rrrr\" (pro zobrazení v roce jako čtyřmístné číslo).</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-159\">Change the \"d\" in `{date:d}` to \"t\" (to display the short time format), \"y\" (to display the year and month), and \"yyyy\" (to display the year as a four-digit number).</span></span> <span data-ttu-id=\"d7e63-160\">Změňte \"C2\" v `{price:C2}` \"e\" (pro exponenciální zápis) a \"F3\" (pro číselná hodnota se tři číslice za desetinnou čárkou).</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-160\">Change the \"C2\" in `{price:C2}` to \"e\" (for exponential notation) and \"F3\" (for a numeric value with three digits after the decimal point).</span></span>\n\n<span data-ttu-id=\"d7e63-161\">Kromě řízení, formátování, můžete také ovládat šířku pole a zarovnání vrácený výraz interpolované řetězce.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-161\">In addition to controlling formatting, you can also control the field width and alignment of the strings returned by an interpolated expression.</span></span> <span data-ttu-id=\"d7e63-162\">V dalším kroku dozvíte, jak to provést.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-162\">In the next step, you'll learn how to do this.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"d7e63-163\">Toto online kódování prostředí je v režimu preview.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-163\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"d7e63-164\">Pokud narazíte na potíže, nahlaste je [v úložišti dotnet nebo zkuste](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-164\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"d7e63-165\">Řídit šířku pole a zarovnání interpolované výrazů</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-165\">Control the field width and alignment of interpolated expressions</span></span>"
  durationInMinutes: 6
  content: "<span data-ttu-id=\"d7e63-166\">Obvykle po řetězec vrácený interpolované výrazu je zahrnutý ve výsledném řetězci, nemá žádné počáteční a koncové mezery.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-166\">Ordinarily, when the string returned by an interpolated expression is included in a result string, it has no leading or trailing spaces.</span></span> <span data-ttu-id=\"d7e63-167\">Platí to hlavně o instancích, ve kterých pracujete s sadu dat, interpolované výrazy umožňují určit šířku pole a jeho zarovnání.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-167\">Particularly for instances in which you are working with a set of data, interpolated expressions let you specify a field width and its alignment.</span></span> <span data-ttu-id=\"d7e63-168\">Chcete-li vidět, spusťte následující kód.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-168\">To see this, run the following code.</span></span>\n\n```csharp\n  var inventory = new Dictionary<string, int>();\n  inventory.Add(\"hammer, ball pein\", 18);\n  inventory.Add(\"hammer, cross pein\", 5);\n  inventory.Add(\"screwdriver, Phillips #2\", 14);\n\n  Console.WriteLine($\"Inventory on {DateTime.Now:d}\");\n  Console.WriteLine(\" \");\n  Console.WriteLine($\"{\"Item\",-25}    {\"Quantity\",10}\");\n  Console.WriteLine(\" \"); \n  foreach (var item in inventory)\n     Console.WriteLine($\"{item.Key,-25}     {item.Value,10}\");\n```\n\n<span data-ttu-id=\"d7e63-169\">Názvy položek jsou zarovnaný doleva a jejich počty zarovnaný doprava.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-169\">The item names are left-aligned, and their quantities are right-aligned.</span></span> <span data-ttu-id=\"d7e63-170\">Zadejte zarovnání přidáním čárkou (\",\") po ve výrazu a určení šířku pole.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-170\">You specify the alignment by adding a comma (\",\") after the expression and designating the field width.</span></span> <span data-ttu-id=\"d7e63-171\">Pokud je šířka pole kladné číslo, pole je zarovnaný doprava:</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-171\">If the field width is a positive number, the field is right-aligned:</span></span>\n\n```text\n{expression, width}\n```\n\n<span data-ttu-id=\"d7e63-172\">Pokud je šířka pole na záporné číslo, pole je zarovnaný doleva:</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-172\">If the field width is a negative number, the field is left-aligned:</span></span>\n\n```text\n{expression, -width}\n```\n<span data-ttu-id=\"d7e63-173\">Zkuste odebrat záporné přihlásí z `{\"Item\",-25}` a `{item.Key,-25}` interpolované výrazy a znovu spusťte v příkladu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-173\">Try removing the negative signs from the `{\"Item\",-25}` and `{item.Key,-25}` interpolated expressions and run the example again.</span></span> <span data-ttu-id=\"d7e63-174\">Čas, je název položky zarovnaný doprava.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-174\">This time, the item name is right-aligned.</span></span>\n\n<span data-ttu-id=\"d7e63-175\">Šířka pole a řetězec formátu v jediném interpolované výrazu můžete kombinovat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-175\">You can combine a field width and a format string in a single interpolated expression.</span></span> <span data-ttu-id=\"d7e63-176\">Šířka pole je nejdříve následovaný dvojtečkou a řetězec formátu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-176\">The field width comes first, followed by a colon and the format string.</span></span> <span data-ttu-id=\"d7e63-177\">Zkuste následující jednoduchý program, který zobrazuje tři formátované řetězce s šířky definovaných polí.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-177\">Try the following simple program that displays three formatted strings with defined field widths.</span></span>\n\n```csharp\nConsole.WriteLine($\"{DateTime.Now,-20:d} Hour {DateTime.Now,-10:HH} {1063.342,15:N2} feet\");\n```\n\n> [!NOTE]\n> <span data-ttu-id=\"d7e63-178\">Toto online kódování prostředí je v režimu preview.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-178\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"d7e63-179\">Pokud narazíte na potíže, nahlaste je [v úložišti dotnet nebo zkuste](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-179\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- content: "<span data-ttu-id=\"d7e63-180\">Jste dokončili rychlé spuštění interpolované řetězce.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-180\">You've completed the interpolated strings quickstart.</span></span> \n\n<span data-ttu-id=\"d7e63-181\">Můžete pokračovat v těchto – elementy QuickStart na místním vývojovém prostředí.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-181\">You can continue these quickstarts on your own local development environment.</span></span> <span data-ttu-id=\"d7e63-182\">Seznámíte se základy [místní vývoj](local-environment.md) a pak vyberte rychlý start.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-182\">Learn the basics of [local development](local-environment.md) and then pick a quickstart.</span></span> <span data-ttu-id=\"d7e63-183\">Zkuste tento stejný postup, přímo na další rychlý start nebo znovu spustit s [čísla v jazyce C#](numbers-in-csharp-local.md) rychlý start.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-183\">You can try this same exercise, move directly to the next quickstart, or start again with the [numbers in C#](numbers-in-csharp-local.md) quickstart.</span></span>\n\n<span data-ttu-id=\"d7e63-184\">Další informace o práci s interpolované řetězce v [interpolované řetězce](../language-reference/keywords/interpolated-strings.md) téma v referenční dokumentace jazyka C#.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7e63-184\">You can learn more about working with interpolated strings in the [Interpolated Strings](../language-reference/keywords/interpolated-strings.md) topic in the C# Reference.</span></span>\0"
