### YamlMime:Tutorial
title: <span data-ttu-id="dc957-101">Větve a smyčky</span><span class="sxs-lookup"><span data-stu-id="dc957-101">Branches and loops</span></span>
metadata:
  title: Větve a smyčky Interaktivní kurz – elementy QuickStart C#
  description: V tento rychlý start o větve a smyčky budete používat prohlížeč další C# interaktivně. Můžete napsat kód C# a zobrazit výsledky kompilace a spuštění kódu přímo v prohlížeči.
  audience: Developer
  level: Beginner
  ms.topic: quickstart
  ms.custom: mvc
  displayType: two-column
  interactive: csharp
  nextTutorialHref: interpolated-strings.yml
  nextTutorialTitle: <span data-ttu-id="dc957-105">Interpolace řetězce v jazyce C#</span><span class="sxs-lookup"><span data-stu-id="dc957-105">String interpolation in C#</span></span>
  ms.openlocfilehash: 83061e2dfac30ce9b6012404259a223f7504e918
  ms.sourcegitcommit: 3d42e1d73e21c35c540dd4adbea23efcbe1b8b0a
  ms.translationtype: MT
  ms.contentlocale: cs-CZ
  ms.lasthandoff: 06/20/2018
  ms.locfileid: "36270315"
items:
- durationInMinutes: 1
  content: >
    <span data-ttu-id="dc957-106">Tento rychlý start se naučíte, jak napsat kód, který hledá proměnné a změní cesta spuštění na základě těchto proměnných.</span><span class="sxs-lookup"><span data-stu-id="dc957-106">This quickstart teaches you how to write code that examines variables and changes execution path based on those variables.</span></span> <span data-ttu-id="dc957-107">Váš prohlížeč budete používat k zápisu C# interaktivně a zobrazit výsledky kompilace a kód spuštěný.</span><span class="sxs-lookup"><span data-stu-id="dc957-107">You'll use your browser to write C# interactively and see the results of compiling and running your code.</span></span> <span data-ttu-id="dc957-108">Tento rychlý Start obsahuje řadu lekce, které prozkoumat větvení a opakování ve smyčce konstrukce v jazyce C#.</span><span class="sxs-lookup"><span data-stu-id="dc957-108">This quickstart contains a series of lessons that explore branching and looping constructs in C#.</span></span> <span data-ttu-id="dc957-109">Tyto poznatky získají naučit základy jazyka C#.</span><span class="sxs-lookup"><span data-stu-id="dc957-109">These lessons teach you the fundamentals of the C# language.</span></span>
- title: <span data-ttu-id="dc957-110">Rozhodnutí, zda pomocí – příkaz</span><span class="sxs-lookup"><span data-stu-id="dc957-110">Make decisions using the if statement</span></span>
  durationInMinutes: 4
  content: "<span data-ttu-id=\"dc957-111\">Spusťte následující kód v okně interaktivní.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-111\">Run the following code in the interactive window.</span></span> <span data-ttu-id=\"dc957-112\">K tomu, zadejte následující blok kódu v okně interaktivní a klikněte na **spustit** tlačítko:</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-112\">To do that, type the following code block in the interactive window and click the **Run** button:</span></span>\n\n```csharp\nint a = 5;\nint b = 6;\nif (a + b > 10)\n    Console.WriteLine(\"The answer is greater than 10.\");\n```\n\n<span data-ttu-id=\"dc957-113\">Upravit deklaraci `b` tak, aby součet menší než 10:</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-113\">Modify the declaration of `b` so that the sum is less than 10:</span></span> \n\n```csharp\nint b = 3;\n```\n\n<span data-ttu-id=\"dc957-114\">Klikněte **spustit** tlačítko znovu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-114\">Click the **Run** button again.</span></span> <span data-ttu-id=\"dc957-115\">Protože odpověď je menší než 10, nic vytisknout.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-115\">Because the answer is less than 10, nothing is printed.</span></span> <span data-ttu-id=\"dc957-116\">**Podmínku** jste testování je false.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-116\">The **condition** you're testing is false.</span></span> <span data-ttu-id=\"dc957-117\">Nemáte žádný kód provést, protože jste zapsat pouze jedním z možných větve pro `if` příkaz: true větev.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-117\">You don't have any code to execute because you've only written one of the possible branches for an `if` statement: the true branch.</span></span>\n\n> [!TIP]\n> <span data-ttu-id=\"dc957-118\">Jak můžete prozkoumat jazyka C# (nebo žádný programovací jazyk), uděláte budete chyby při psaní kódu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-118\">As you explore C# (or any programming language), you'll make mistakes when you write code.</span></span> <span data-ttu-id=\"dc957-119\">**Kompilátoru** vyhledá tyto chyby a sestav je pro vás.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-119\">The **compiler** will find those errors and report them to you.</span></span> <span data-ttu-id=\"dc957-120\">Když výstup obsahuje chybové zprávy, prohlédněte si úzce příklad kódu a kódu v okně interaktivní zobrazíte co opravit.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-120\">When the output contains error messages, look closely at the example code, and the code in the interactive window to see what to fix.</span></span>\n> <span data-ttu-id=\"dc957-121\">Tento úkol vám pomohou naučit struktury kódu C#.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-121\">That exercise will help you learn the structure of C# code.</span></span>     \n\n<span data-ttu-id=\"dc957-122\">Tento první příklad ukazuje možnosti `if` a boolean typy.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-122\">This first sample shows the power of `if` and boolean types.</span></span> <span data-ttu-id=\"dc957-123\">A *boolean* je proměnná, která může mít jednu ze dvou hodnot: `true` nebo `false`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-123\">A *boolean* is a variable that can have one of two values: `true` or `false`.</span></span> <span data-ttu-id=\"dc957-124\">C# definuje speciální typ `bool` pro logická hodnota proměnné.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-124\">C# defines a special type, `bool` for boolean variables.</span></span> <span data-ttu-id=\"dc957-125\">`if` Příkaz kontroluje hodnotu `bool`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-125\">The `if` statement checks the value of a `bool`.</span></span> <span data-ttu-id=\"dc957-126\">Pokud je hodnota `true`, následující příkaz `if` provede.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-126\">When the value is `true`, the statement following the `if` executes.</span></span> <span data-ttu-id=\"dc957-127\">Jinak se přeskočí.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-127\">Otherwise, it is skipped.</span></span> \n\n<span data-ttu-id=\"dc957-128\">Tento proces probíhá kontrola podmínky a provádění příkazů na základě těchto podmínek je velice mocný nástroj.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-128\">This process of checking conditions and executing statements based on those conditions is very powerful.</span></span> <span data-ttu-id=\"dc957-129\">Podíváme se na další.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-129\">Let's explore more.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"dc957-130\">Toto online kódování prostředí je v režimu preview.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-130\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"dc957-131\">Pokud narazíte na potíže, nahlaste je [v úložišti dotnet nebo zkuste](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-131\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="dc957-132">Ujistěte se, pokud a jinak spolupracují</span><span class="sxs-lookup"><span data-stu-id="dc957-132">Make if and else work together</span></span>
  durationInMinutes: 10
  content: "\n<span data-ttu-id=\"dc957-133\">Ke spouštění různých kódu v true a false větve, vytvoříte `else` firemní pobočky, který provede, když je podmínka vyhodnocena jako false.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-133\">To execute different code in both the true and false branches, you create an `else` branch that executes when the condition is false.</span></span> <span data-ttu-id=\"dc957-134\">Zkuste provést následující:</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-134\">Try this:</span></span>\n\n```csharp\nint a = 5;\nint b = 3;\nif (a + b > 10)\n    Console.WriteLine(\"The answer is greater than 10\");\nelse\n    Console.WriteLine(\"The answer is not greater than 10\");\n```\n\n<span data-ttu-id=\"dc957-135\">Následující příkaz `else` – klíčové slovo provede pouze, pokud je podmínka testuje `false`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-135\">The statement following the `else` keyword executes only when the condition being tested is `false`.</span></span> <span data-ttu-id=\"dc957-136\">Kombinování `if` a `else` s logickou hodnotu podmínky poskytuje všechny výkon potřebujete.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-136\">Combining `if` and `else` with boolean conditions provides all the power you need.</span></span>\n\n> [!IMPORTANT]\n> <span data-ttu-id=\"dc957-137\">Odsazení pod `if` a `else` příkazy je pro lidské čtečky.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-137\">The indentation under the `if` and `else` statements is for human readers.</span></span>\n> <span data-ttu-id=\"dc957-138\">Jazyk C# nepodporuje považovat za odsazení nebo mezer významné.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-138\">The C# language doesn't treat indentation or white space as significant.</span></span> <span data-ttu-id=\"dc957-139\">Následující příkaz `if` nebo `else` – klíčové slovo bude proveden podle stavu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-139\">The statement following the `if` or `else` keyword will be executed based on the condition.</span></span> <span data-ttu-id=\"dc957-140\">Všechny ukázky tento rychlý start podle běžnou praxí odsazovat řádky založené na toku řízení příkazů.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-140\">All the samples in this quickstart follow a common practice to indent lines based on the control flow of statements.</span></span>\n\n<span data-ttu-id=\"dc957-141\">Protože odsazení není důležité, budete muset použít `{` a `}` označte, když má více než jeden příkaz, který má být součástí blok, který provede podmíněně.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-141\">Because indentation is not significant, you need to use `{` and `}` to indicate when you want more than one statement to be part of the block that executes conditionally.</span></span> <span data-ttu-id=\"dc957-142\">Programátory v jazyce C# obvykle používají tyto složené závorky na všech `if` a `else` klauzule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-142\">C# programmers typically use those braces on all `if` and `else` clauses.</span></span> <span data-ttu-id=\"dc957-143\">Následující příklad je stejný jako co jste právě vytvořili.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-143\">The following example is the same as what you just created.</span></span> <span data-ttu-id=\"dc957-144\">Vyzkoušejte.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-144\">Try it.</span></span>\n\n```csharp\nint a = 5;\nint b = 3;\nif (a + b > 10)\n{\n    Console.WriteLine(\"The answer is greater than 10\");\n}\nelse\n{\n    Console.WriteLine(\"The answer is not greater than 10\");\n}\n```\n\n> [!TIP]\n> <span data-ttu-id=\"dc957-145\">Procházení zbytku tento rychlý start, ukázky kódu, všechny zahrnují složené závorky, následující přijata postupy.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-145\">Through the rest of this quickstart, the code samples all include the braces, following accepted practices.</span></span>\n\n<span data-ttu-id=\"dc957-146\">Můžete otestovat složitější podmínky:</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-146\">You can test more complicated conditions:</span></span>\n\n```csharp\nint a = 5;\nint b = 3;\nint c = 4;\nif ((a + b + c > 10) && (a > b))\n{\n    Console.WriteLine(\"The answer is greater than 10\");\n    Console.WriteLine(\"And the first number is greater than the second\");\n}\nelse\n{\n    Console.WriteLine(\"The answer is not greater than 10\");\n    Console.WriteLine(\"Or the first number is not greater than the second\");\n}\n```\n\n<span data-ttu-id=\"dc957-147\">`&&` Představuje \"a\".</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-147\">The `&&` represents \"and\".</span></span> <span data-ttu-id=\"dc957-148\">Znamená to, že musí být splněny příkaz nelze provést ve větvi true obě podmínky.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-148\">It means both conditions must be true to execute the statement in the true branch.</span></span>  <span data-ttu-id=\"dc957-149\">Tyto příklady také ukazují, že můžete mít více příkazů v každé větve podmíněného zadaný uzavřete je v `{` a `}`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-149\">These examples also show that you can have multiple statements in each conditional branch, provided you enclose them in `{` and `}`.</span></span>\n\n<span data-ttu-id=\"dc957-150\">Můžete také použít `||` představují \"nebo\":</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-150\">You can also use  `||` to represent \"or\":</span></span>\n\n```csharp\nint a = 5;\nint b = 3;\nint c = 4;\nif ((a + b + c > 10) || (a > b))\n{\n    Console.WriteLine(\"The answer is greater than 10\");\n    Console.WriteLine(\"Or the first number is greater than the second\");\n}\nelse\n{\n    Console.WriteLine(\"The answer is not greater than 10\");\n    Console.WriteLine(\"And the first number is not greater than the second\");\n}\n```\n\n> [!NOTE]\n> <span data-ttu-id=\"dc957-151\">Toto online kódování prostředí je v režimu preview.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-151\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"dc957-152\">Pokud narazíte na potíže, nahlaste je [v úložišti dotnet nebo zkuste](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-152\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="dc957-153">Používat smyčky opakování operace</span><span class="sxs-lookup"><span data-stu-id="dc957-153">Use loops to repeat operations</span></span>
  durationInMinutes: 6
  content: "<span data-ttu-id=\"dc957-154\">Další důležité koncept vytvořit větší programy je **smyčky**.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-154\">Another important concept to create larger programs is **loops**.</span></span> <span data-ttu-id=\"dc957-155\">Použijete smyčky opakování příkazy, které chcete spustit více než jednou.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-155\">You'll use loops to repeat statements that you want executed more than once.</span></span> <span data-ttu-id=\"dc957-156\">Zkuste tento kód v okně interaktivní:</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-156\">Try this code in the interactive window:</span></span>\n\n```csharp\nint counter = 0;\nwhile (counter < 10)\n{\n  Console.WriteLine($\"Hello World! The counter is {counter}\");\n  counter++;\n}\n```\n\n<span data-ttu-id=\"dc957-157\">`while` Příkaz kontroluje podmínku a provede následující příkaz `while`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-157\">The `while` statement checks a condition and executes the statement following the `while`.</span></span> <span data-ttu-id=\"dc957-158\">Bude se opakovat kontrolu stavu a provádění tyto příkazy, dokud je podmínka vyhodnocena jako false.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-158\">It will repeat checking the condition and executing those statements until the condition is false.</span></span>\n\n<span data-ttu-id=\"dc957-159\">V tomto příkladu je jeden další nové operátor.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-159\">There's one other new operator in this example.</span></span> <span data-ttu-id=\"dc957-160\">`++` Po `counter` proměnná **přírůstek** operátor.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-160\">The `++` after the `counter` variable is the **increment** operator.</span></span> <span data-ttu-id=\"dc957-161\">Přidá 1 na hodnotu čítače a uloží tuto hodnotu do proměnné čítače.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-161\">It adds 1 to the value of counter, and stores that value in the counter variable.</span></span>\n\n> [!IMPORTANT]\n> <span data-ttu-id=\"dc957-162\">Ujistěte se, že `while` smyčku přepnout na hodnotu false, při spuštění kódu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-162\">Make sure that the `while` loop condition does switch to false as you execute the code.</span></span> <span data-ttu-id=\"dc957-163\">Jinak, vytvoříte **nekonečná smyčka** které nikdy končí vašeho programu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-163\">Otherwise, you create an **infinite loop** where your program never ends.</span></span> <span data-ttu-id=\"dc957-164\">Pojďme není ukazují, že vzhledem k tomu modul, který běží váš kód bude časový limit a zobrazí se žádný výstup z programu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-164\">Let's not demonstrate that, because the engine that runs your code will time out and you'll see no output from your program.</span></span>\n\n<span data-ttu-id=\"dc957-165\">`while` Smyčky testuje podmínku před provedením následující kód `while`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-165\">The `while` loop tests the condition before executing the code following the `while`.</span></span> <span data-ttu-id=\"dc957-166\">`do` ... `while` smyček nejprve spustí kód a pak kontroluje podmínku.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-166\">The `do` ... `while` loop executes the code first, and then checks the condition.</span></span> <span data-ttu-id=\"dc957-167\">Vypadá takto:</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-167\">It looks like this:</span></span>\n\n```csharp\nint counter = 0;\ndo\n{\n  Console.WriteLine($\"Hello World! The counter is {counter}\");\n  counter++;\n} while (counter < 10);\n```\n\n<span data-ttu-id=\"dc957-168\">To `do` smyčky a dříve `while` smyčky fungovat stejně.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-168\">This `do` loop and the earlier `while` loop work the same.</span></span> \n\n<span data-ttu-id=\"dc957-169\">Můžeme přesunout k jedné poslední příkaz smyčky.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-169\">Let's move on to one last loop statement.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"dc957-170\">Toto online kódování prostředí je v režimu preview.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-170\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"dc957-171\">Pokud narazíte na potíže, nahlaste je [v úložišti dotnet nebo zkuste](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-171\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="dc957-172">Pracovat smyčky for</span><span class="sxs-lookup"><span data-stu-id="dc957-172">Work with the for loop</span></span>
  durationInMinutes: 5
  content: "<span data-ttu-id=\"dc957-173\">Další běžné smyčky příkaz, který se zobrazí v C# – kód je `for` smyčky.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-173\">Another common loop statement that you'll see in C# code is the `for` loop.</span></span> <span data-ttu-id=\"dc957-174\">Zkuste tento kód v okně interaktivní:</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-174\">Try this code in the interactive window:</span></span>\n\n```csharp\nfor(int counter = 0; counter < 10; counter++)\n{\n  Console.WriteLine($\"Hello World! The counter is {counter}\");\n} \n```\n\n<span data-ttu-id=\"dc957-175\">Funguje jako `while` smyčky a `do` smyčky jste už použili.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-175\">This does the same work as the `while` loop and the `do` loop you've already used.</span></span> <span data-ttu-id=\"dc957-176\">`for` Příkaz má tři části, které řídí, jak to funguje.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-176\">The `for` statement has three parts that control how it works.</span></span> \n\n<span data-ttu-id=\"dc957-177\">První část je **pro inicializátoru**: `for counter = 0;` uvádí, že `counter` je proměnná smyčky a nastaví počáteční hodnoty `0`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-177\">The first part is the **for initializer**: `for counter = 0;` declares that `counter` is the loop variable, and sets its initial value to `0`.</span></span>\n\n<span data-ttu-id=\"dc957-178\">Střední část je **pro podmínku**: `counter < 10` deklaruje, že tato `for` smyčce bude pokračovat v provádění, dokud hodnota čítače je menší než 10.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-178\">The middle part is the **for condition**: `counter < 10` declares that this `for` loop continues to execute as long as the value of counter is less than 10.</span></span>\n\n<span data-ttu-id=\"dc957-179\">Poslední část je **pro iterator**: `counter++` Určuje, jak upravit proměnnou smyčky po provedení těchto bloku `for` příkaz.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-179\">The final part is the **for iterator**: `counter++` specifies how to modify the loop variable after executing the block following the `for` statement.</span></span> <span data-ttu-id=\"dc957-180\">Zde, určuje, že `counter` by se zvýší o 1 pokaždé, když provádí bloku.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-180\">Here, it specifies that `counter` should be incremented by 1 each time the block executes.</span></span>\n\n<span data-ttu-id=\"dc957-181\">Experimentujte s sami.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-181\">Experiment with these yourself.</span></span> <span data-ttu-id=\"dc957-182\">Zkuste každou z následujících:</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-182\">Try each of the following:</span></span>\n\n- <span data-ttu-id=\"dc957-183\">Změňte inicializátoru spustit na jinou hodnotu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-183\">Change the initializer to start at a different value.</span></span>\n- <span data-ttu-id=\"dc957-184\">Změňte stav kdykoli zastavit jinou hodnotu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-184\">Change the condition to stop at a different value.</span></span>\n\n<span data-ttu-id=\"dc957-185\">Když jste hotovi, můžeme přesunout k zápisu některé sami používat co když jste se naučili kódu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-185\">When you're done, let's move on to write some code yourself to use what you've learned.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"dc957-186\">Toto online kódování prostředí je v režimu preview.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-186\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"dc957-187\">Pokud narazíte na potíže, nahlaste je [v úložišti dotnet nebo zkuste](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-187\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="dc957-188">Kombinace větví a smyčky</span><span class="sxs-lookup"><span data-stu-id="dc957-188">Combine branches and loops</span></span>
  durationInMinutes: 12
  content: >
    <span data-ttu-id="dc957-189">Teď, když jste viděli `if` prohlášení a opakování konstrukce v jazyce C#, najdete v části Pokud můžete napsat kód C# k vyhledání součet všech celá čísla 1 až 20, které jsou dělitelná 3.</span><span class="sxs-lookup"><span data-stu-id="dc957-189">Now that you've seen the `if` statement and the looping constructs in the C# language, see if you can write C# code to find the sum of all integers 1 through 20 that are divisible by 3.</span></span>  <span data-ttu-id="dc957-190">Tady je několik pomocných parametrů:</span><span class="sxs-lookup"><span data-stu-id="dc957-190">Here are a few hints:</span></span>


    - <span data-ttu-id="dc957-191">`%` Operátor vám dává zbytek operace dělení.</span><span class="sxs-lookup"><span data-stu-id="dc957-191">The `%` operator gives you the remainder of a division operation.</span></span>

    - <span data-ttu-id="dc957-192">`if` Příkaz vám dává stav chcete zobrazit, pokud číslo musí být součástí součet.</span><span class="sxs-lookup"><span data-stu-id="dc957-192">The `if` statement gives you the condition to see if a number should be part of the sum.</span></span>

    - <span data-ttu-id="dc957-193">`for` Smyčky vám může pomoct opakujte sérii kroků pro všechna čísla 1 až 20.</span><span class="sxs-lookup"><span data-stu-id="dc957-193">The `for` loop can help you repeat a series of steps for all the numbers 1 through 20.</span></span>


    <span data-ttu-id="dc957-194">Vyzkoušejte si to.</span><span class="sxs-lookup"><span data-stu-id="dc957-194">Try it yourself.</span></span> <span data-ttu-id="dc957-195">Potom zkontrolujte, jak jste to udělali.</span><span class="sxs-lookup"><span data-stu-id="dc957-195">Then check how you did.</span></span> <span data-ttu-id="dc957-196">Jako nápovědu měli byste obdržet 63 pro odpověď.</span><span class="sxs-lookup"><span data-stu-id="dc957-196">As a hint, you should get 63 for an answer.</span></span>


    > [!NOTE]

    > <span data-ttu-id="dc957-197">Toto online kódování prostředí je v režimu preview.</span><span class="sxs-lookup"><span data-stu-id="dc957-197">This online coding experience is in preview mode.</span></span> <span data-ttu-id="dc957-198">Pokud narazíte na potíže, nahlaste je [v úložišti dotnet nebo zkuste](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="dc957-198">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="dc957-199">Dokončení výzvy</span><span class="sxs-lookup"><span data-stu-id="dc957-199">Complete challenge</span></span>
  durationInMinutes: 1
  content: >
    <span data-ttu-id="dc957-200">Vytvoříte přibližně toto?</span><span class="sxs-lookup"><span data-stu-id="dc957-200">Did you come up with something like this?</span></span>


    ```csharp

    int sum = 0;

    for (int number = 1; number < 21; number++)

    {
      if (number % 3 == 0)
      {
        sum = sum + number;
      }
    }

    Console.WriteLine($"The sum is {sum}");

    ```


    > [!NOTE]

    > <span data-ttu-id="dc957-201">Toto online kódování prostředí je v režimu preview.</span><span class="sxs-lookup"><span data-stu-id="dc957-201">This online coding experience is in preview mode.</span></span> <span data-ttu-id="dc957-202">Pokud narazíte na potíže, nahlaste je [v úložišti dotnet nebo zkuste](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="dc957-202">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="dc957-203">Blahopřejeme!</span><span class="sxs-lookup"><span data-stu-id="dc957-203">Congratulations!</span></span>
  content: "<span data-ttu-id=\"dc957-204\">Jste dokončili rychlé spuštění \"větve a smyčky\".</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-204\">You've completed the \"branches and loops\" quickstart.</span></span> \n\n<span data-ttu-id=\"dc957-205\">Můžete pokračovat v těchto – elementy QuickStart na vašem vývojovém prostředí.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-205\">You can continue these quickstarts on your own development environment.</span></span> <span data-ttu-id=\"dc957-206\">Seznámíte se základy [místní vývoj](local-environment.md) a pak vyberte rychlý start.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-206\">Learn the basics of [local development](local-environment.md) and then pick a quickstart.</span></span> <span data-ttu-id=\"dc957-207\">Zkuste tento stejný postup, přímo na další rychlý start nebo znovu spustit na s [čísla v jazyce C#](numbers-in-csharp-local.md) rychlý start.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-207\">You can try this same exercise, move directly to the next quickstart, or start again at with the [numbers in C#](numbers-in-csharp-local.md) quickstart.</span></span>\n\n<span data-ttu-id=\"dc957-208\">Další informace o těchto konceptech v těchto tématech:</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-208\">You can learn more about these concepts in these topics:</span></span>\n\n<span data-ttu-id=\"dc957-209\">[Pokud a else – příkaz](../language-reference/keywords/if-else.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-209\">[If and else statement](../language-reference/keywords/if-else.md) </span></span>  \n<span data-ttu-id=\"dc957-210\">[While – příkaz](../language-reference/keywords/while.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-210\">[While statement](../language-reference/keywords/while.md) </span></span>  \n<span data-ttu-id=\"dc957-211\">[Do – příkaz](../language-reference/keywords/do.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-211\">[Do statement](../language-reference/keywords/do.md) </span></span>  \n[<span data-ttu-id=\"dc957-212\">For – příkaz</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc957-212\">For statement</span></span>](../language-reference/keywords/for.md)"
