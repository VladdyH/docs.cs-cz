### YamlMime:Tutorial
title: Hello C#
metadata:
  title: "Hello World Interaktivní kurz – elementy QuickStart C#"
  description: "V tento rychlý start budete používat prohlížeč další C# interaktivně. Psaní kódu jazyka C# a zobrazit výsledky kompilace a spuštění kódu přímo v prohlížeči."
  audience: Developer
  level: Beginner
  ms.topic: get-started-article
  nextTutorialHref: numbers-in-csharp
  nextTutorialTitle: "Čísla v jazyce C#"
  displayType: two-column
  interactive: csharp
  ms.custom: mvc
  ms.prod: .net
  ms.technology: devlang-csharp
  ms.openlocfilehash: 7bc970e3c6eb93bf98323bd266b8c6a49f0cc1d0
  ms.sourcegitcommit: d2da0142247ef42a219a5d2907f153e62dc6ea0d
  ms.translationtype: MT
  ms.contentlocale: cs-CZ
  ms.lasthandoff: 02/01/2018
items:
- durationInMinutes: 1
  content: "Tento rychlý start se dozvíte, jaké C# interaktivně, pomocí prohlížeče zápisu C# a zobrazit výsledky kompilace a kód spuštěný. Obsahuje řadu lekce, které začínají s programem \"Hello World\". Tyto poznatky získají naučit základy jazyka C#.\n"
- title: "Spusťte váš první program C#"
  durationInMinutes: 2
  content: "Spusťte následující kód v okně interaktivní. K tomu, zadejte následující blok kódu v okně interaktivní a klikněte na **spustit** tlačítko:\n\n```csharp\nConsole.WriteLine(\"Hello World!\");\n```\n\nBlahopřejeme! Spustíte váš první program C#. Je jednoduchý program, který se zobrazí zpráva \"Hello, World!\". Používanou <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> metoda tisknout této zprávě. `Console`je typ, který reprezentuje v okně konzoly. `WriteLine`je metoda `Console` typ, který se vytiskne na řádku textu do této konzoly text.\n\nUmožňuje přesunout a prozkoumejte informace. Jsou zde popsány zbytek této lekci práci s `string` typu, který reprezentuje text v jazyce C#. Podobně jako `Console` typu, `string` typ má metody. `string` Metody pracovat s textem. \n\n> [!NOTE]\n> Toto online kódování prostředí je v režimu preview. Pokud narazíte na potíže, nahlaste je [v úložišti dotnet nebo zkuste](https://github.com/dotnet/try/issues).\n"
- title: "Deklarace a používání proměnných"
  durationInMinutes: 3
  content: "Váš první program vytisknout `string` \"Hello, World!\" na obrazovce. \n\n> [!TIP]\n> Jak můžete prozkoumat jazyka C# (nebo žádný programovací jazyk), uděláte budete chyby při psaní kódu. **Kompilátoru** vyhledá tyto chyby a sestav je pro vás. Když výstup obsahuje chybové zprávy, prohlédněte si úzce příklad kódu a kódu v okně interaktivní zobrazíte co opravit.\n> Tento úkol vám pomohou naučit struktury kódu C#. \n\nVáš první program je omezený na jednu zprávu tisku. Užitečnější programy můžete zapsat pomocí **proměnné**. A **proměnná** je symbol můžete spustit stejný kód s různými hodnotami. Nyní si vyzkoušíte! Nahraďte kód, který jste vytvořili v okně interaktivní následujícím kódem:\n\n```csharp\nstring aFriend = \"Bill\";\nConsole.WriteLine(aFriend);\n```\n\nPrvní řádek deklaruje proměnnou, `aFriend` a přiřadí ji hodnotu \"Faktury\". Druhý řádek vytiskne název.\n\nMůžete přiřadit různé hodnoty pro všechny proměnné, které je deklarovat. Název můžete změnit na jednu z vašich přátel. V okně interaktivní následující kód, který jste již přidali, přidejte tyto dva řádky:\n\n```csharp\naFriend = \"Maria\";\nConsole.WriteLine(aFriend);\n```\n\nVšimněte si, že na stejný řádek kódu vytiskne dvou různých zpráv, na základě hodnoty, které jsou uložené v `aFriend` proměnné.\n\nMůže dojít také k tomu, že je slovo \"Hello\" nebyl nalezen v posledních dvou zprávy. Umožňuje to opravíme teď.  Upravte řádky, které vytisknout zpráva, která má následující:\n\n```csharp\nConsole.WriteLine(\"Hello \" + aFriend);\n```\n\nKlikněte na tlačítko **spustit** znovu a zobrazte si výsledky.\n\nJak jsme průběhu, vytváření řetězců tisknout pomocí `+` stane náročná. Řetězec interpolace umožňuje část řetězce způsobem více stručná a čitelná.\n\nPokud přidáte `$` před uvozovky otevírání řetězce, můžete pak obsahují řetězec výrazy, jako je třeba `aFriend` proměnné uvnitř řetězec do složených závorek.\n\n\n```csharp\nConsole.WriteLine($\"Hello {aFriend}\");\n```\n\nKlikněte na tlačítko **spustit** znovu a zobrazte si výsledky.\n\n> [!NOTE]\n> Toto online kódování prostředí je v režimu preview. Pokud narazíte na potíže, nahlaste je [v úložišti dotnet nebo zkuste](https://github.com/dotnet/try/issues).\n"
- title: "Práce s řetězci"
  durationInMinutes: 5
  content: "Poslední úpravy se naše první pohled na co můžete dělat s řetězci. Podíváme se na další.\n\n`+` Nazývá operátor v jazyce C#. Při použití řetězců, jako `firstString + secondString`, nový řetězec je vytvořen z první následuje text z druhý textu. Tento proces se označuje jako *zřetězení*. Můžete kombinovat libovolný počet řetězce, včetně proměnné řetězce.  Zkuste provést následující:\n\n```csharp\nstring firstFriend = \"Maria\";\nstring secondFriend = \"Sage\";\nConsole.WriteLine($\"My friends are {firstFriend} and {secondFriend}\");\n```\n\nJak prozkoumat více řetězce, můžete najít délka řetězce pomocí `Length`. `Length`je **vlastnost** z řetězce a vrátí počet znaků v tomto řetězci. Přidejte následující kód v dolní části okna interaktivní:\n\n```csharp\nConsole.WriteLine($\"The name {firstFriend} has {firstFriend.Length} letters.\");\nConsole.WriteLine($\"The name {secondFriend} has {secondFriend.Length} letters.\");\n```\n\n> [!TIP]\n> Toto je dobrý čas a prozkoumejte sami. Když jste se naučili, který `Console.WriteLine()` zapíše text na obrazovku. Když jste se naučili deklarujte proměnné a zřetězení řetězců společně. Experiment v okně interaktivní. Zápis některé další zprávy. Sestavení řetězců pomocí `+` operátor.\n\n> [!NOTE]\n> Toto online kódování prostředí je v režimu preview. Pokud narazíte na potíže, nahlaste je [v úložišti dotnet nebo zkuste](https://github.com/dotnet/try/issues).\n"
- title: "Více s řetězce"
  durationInMinutes: 5
  content: "Jste dosud používali **metoda**, <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>, tisknout zprávy. A **metoda** je blok kódu, který implementuje některé akce. Má název, takže můžete k němu přístup. \n\n`string` Typ má mnoho užitečných metod. Podíváme se <xref:System.String.Trim%2A> metodu a související metody <xref:System.String.TrimStart%2A> a <xref:System.String.TrimEnd%2A>. Tyto metody odebrat úvodní i koncové mezery:\n\n```csharp\nstring message = \"      Hello World!       \";\nConsole.WriteLine($\"[{message}]\");\n\nstring trimmedMessage = message.TrimStart();\nConsole.WriteLine($\"[{trimmedMessage}]\");\n\ntrimmedMessage = message.TrimEnd();\nConsole.WriteLine($\"[{trimmedMessage}]\");\n\ntrimmedMessage = message.Trim();\nConsole.WriteLine($\"[{trimmedMessage}]\");\n```\n\nTato ukázka posiluje několika důležité koncepty pro práci s řetězci. Metody pro manipulaci s řetězci vrátí nové objekty řetězec namísto provádění změn v místě. Uvidíte, že každé volání do jakéhokoli z `Trim` metody vrací nový řetězec, ale nemění původní zprávy.\n\nExistují jiné metody, které jsou k dispozici pro práci s řetězcem. Například pravděpodobně jste použili vyhledávání a nahraďte příkaz v textovém editoru nebo editoru. <xref:System.String.Replace%2A> Metoda nemá něco podobného jako v `string`. Vyhledá dílčí řetězec a nahradí jiným textem. <xref:System.String.Replace%2A> Metoda přebírá dva **parametry**. Jedná se o řetězce v závorkách. První řetězec je hledaný text. Druhý řetězec je text k nahraďte ho. Vyzkoušejte sami. Přidejte tento kód:\n\n```csharp\nstring message = \"Hello World!\";\nConsole.WriteLine(message);\nmessage = message.Replace(\"Hello\", \"Greetings\");\nConsole.WriteLine(message);\n```\n\nDvě užitečné metody Ujistěte se, řetězce všechna velká nebo malá všechny. Zkuste následující kód:\n\n```csharp\nstring message = \"Hello World!\";\nConsole.WriteLine(message);\nConsole.WriteLine(message.ToUpper());\nConsole.WriteLine(message.ToLower());\n```\n\n> [!NOTE]\n> Toto online kódování prostředí je v režimu preview. Pokud narazíte na potíže, nahlaste je [v úložišti dotnet nebo zkuste](https://github.com/dotnet/try/issues).\n"
- title: "Hledání řetězců"
  durationInMinutes: 10
  content: "Další část *vyhledávání a nahrazení* operace je najít text v řetězci. Můžete použít <xref:System.String.Contains%2A> metoda pro vyhledávání. Zde zjistíte, zda řetězec obsahuje dílčí řetězec uvnitř ho. Zkuste následující kód a prozkoumejte <xref:System.String.Contains%2A>:\n\n```csharp\nstring message = \"You say goodbye, and I say hello\";\nConsole.WriteLine(message.Contains(\"goodbye\"));\nConsole.WriteLine(message.Contains(\"greetings\"));\n```\n\n<xref:System.String.Contains%2A> Metoda vrátí **boolean** hodnotu, která sděluje, pokud byl nalezen řetězec, který jste hledali. A **boolean** ukládá buď `true` nebo `false` hodnotu. Získáte další informace o **boolean** hodnoty v později lekce.\n\n***Výzvy***\n\nExistují dvě metody podobné, <xref:System.String.StartsWith%2A> a <xref:System.String.EndsWith%2A> , také hledat dílčího řetězce v řetězci. Tyto najít dílčí řetězec na začátku nebo konci řetězce. Pokus o změnu v předchozím příkladu používat <xref:System.String.StartsWith%2A> a <xref:System.String.EndsWith%2A> místo <xref:System.String.Contains%2A>. Vyhledejte \"Vy\" nebo \"goodbye\" na začátku řetězce. Hledejte \"text hello\" nebo \"goodbye\" na konci řetězce.\n\n> [!Note]\n> Při testování text na konci řetězce, podívejte se na vaše interpunkce. Pokud řetězec končí tečkou, je nutné zkontrolovat řetězec, který končí tečkou.\n\nMěli byste obdržet `true` pro počínaje \"Vy\" a končící \"hello\" a na hodnotu false pro začíná nebo končí \"goodbye\". \n\n> [!NOTE]\n> Toto online kódování prostředí je v režimu preview. Pokud narazíte na potíže, nahlaste je [v úložišti dotnet nebo zkuste](https://github.com/dotnet/try/issues).\n"
- title: "Dokončení výzvy"
  durationInMinutes: 3
  content: "Vytvoříte přibližně toto?\n\n```csharp\nstring message = \"You say goodbye, and I say hello\";\nConsole.WriteLine(message.StartsWith(\"You\"));\nConsole.WriteLine(message.StartsWith(\"goodbye\"));\n\nConsole.WriteLine(message.EndsWith(\"hello\"));\nConsole.WriteLine(message.EndsWith(\"goodbye\"));\n```\n\n> [!NOTE]\n> Toto online kódování prostředí je v režimu preview. Pokud narazíte na potíže, nahlaste je [v úložišti dotnet nebo zkuste](https://github.com/dotnet/try/issues).\n"
- content: "Jste dokončili rychlé spuštění \"Hello C#\".\n\nDalší informace o práci s `string` zadejte [Průvodce programováním v C#](../programming-guide/index.md) téma na [řetězce](../programming-guide/strings/index.md).\n[Postup tipy na řetězce](../how-to/index.md#strings).\0"
